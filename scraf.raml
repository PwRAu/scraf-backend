#%RAML 1.0
---
title: Scraf
baseUri: https://scraf.pwrau.ml/api/{version}
version: v1

/students:
  type: 
    collection:
      example-get-collection: |
        {
          "students": [
            {
              "id": 107,
              "name": "Andrea Pappacoda"
            },
            {
              "id": 238,
              "name": "Paolo Andreoli"
            }
          ]
        }
  /{studentId}:
    get:
    patch:
    delete:
    /subjects:
      get:
      /{subjectId}:
        /marks:
          get:

/teachers:
  get:
  post:
  /{teacherId}:
    get:
    patch:
    delete:
    /subjects:
      get:
      post:
      /{subjectId}:
        delete:
        /marks:
          get:

/schools:
  get:
  post:
  /{schoolId}:
    get:
    patch:
    delete:
    /subjects:
      get:
      post:
      /{subjectId}:
        get:
        patch:
        delete:
        /marks:
          get:
          post:
          /{markId}:
            get:
            patch:
            delete:
    /classes:
      get:
      post:
      /{classId}:
        get:
        patch:
        delete:
        /subjects:
          get:
          post:
          /{subjectId}:
            delete:
        /students:
          /{studentId}:
        /teachers:
          /{teacherId}:
  /students:
    get:
    post:
    /{studentId}:
      delete:
  /teachers:
    get:
    post:
    /{teacherId}:
      delete:

resourceTypes:
  collection:
    description: <<resourcePathName>> registered to Scraf
    get:
      description: Get a list of <<resourcePathName>> based on their name
      queryParameters:
        name:
          description: "Name of the <<resourcePathName|!singularize>> to search"
          type: string
          minLength: 3
          required: true
      responses:
        200:
          body:
            application/json:
              type: search-result
              example: <<example-get-collection>>
        400:
          body:
            application/json:
    post:
      description: Register a <<resourcePathName|!singularize>> and get its id
      body:
        application/json:
          type: <<resourcePathName|!singularize>>
      responses:
        201:
          body:
            application/json:
              type: id
              example: |
                {
                  "id": 107
                }
        400:
          body:
            application/json:
  collection-item:
    get:
    patch:
    delete:
  sub-collection:
    get:
    post:
  sub-collection-item:
    delete:
  sub-collection-read:
    get:

types:
  id: |
    {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "multipleOf": 1
        }
      }
    }
  search-result: |
    {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "multipleOf": 1
        },
        "name": {
          "type": "string"
        }
      }
    }
  student: |
    {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "type": "object",
      "properties": {
        "mail": {
          "type": "string",
          "format": "email",
          "required": true
        },
        "name": {
          "type": "string",
          "required": true
        },
        "surname": {
          "type": "string",
          "required": false
        }
      }
    }
  teacher: |
    {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "type": "object",
      "properties": {
        "mail": {
          "type": "string",
          "format": "email",
          "required": true
        },
        "name": {
          "type": "string",
          "required": true
        },
        "surname": {
          "type": "string",
          "required": false
        }
      }
    }
  school: |
    {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "required": true
        },
        "name": {
          "type": "string",
          "required": true
        }
      }
    }
  class: |
    {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "required": true
        },
        "name": {
          "type": "string",
          "required": true
        }
      }
    }
